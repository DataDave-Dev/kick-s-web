---
import Layout from "../layouts/Layout.astro";
import SectionContainer from "../components/SectionContainer.astro";
import { supabase } from "../lib/supabase";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken && !refreshToken) {
    return redirect("/");
}

const userCookie = cookies.get("sb-user");
let user = null;
if (userCookie && userCookie.value) {
    try {
        user = JSON.parse(userCookie.value);
    } catch (error) {
        console.error("Error parsing user cookie:", error);
        return redirect("/");
    }
} else {
    return redirect("/");
}

if (!user || !user.id) {
    return redirect("/");
}

const { data: userOrders = [], error: userOrdersError } = await supabase
    .from("vw_orders")
    .select("*")
    .eq("id_Usuario", user.id);
---

<Layout>
    <SectionContainer class="py-12 px-4 md:py-25">
        <div class="max-w-5xl mx-auto">
            <h1 class="text-2xl md:text-3xl font-bold mb-8 text-gray-900">
                Mis Pedidos
            </h1>
            {
                userOrdersError && (
                    <div class="bg-red-50 border border-red-100 rounded-xl p-4 mb-6 text-red-700">
                        Error al cargar tus pedidos: {userOrdersError.message || "Intenta nuevamente más tarde"}
                    </div>
                )
            }
            {
                userOrders?.length === 0 && !userOrdersError && (
                    <div class="text-gray-500 text-center py-12">
                        No tienes pedidos activos.
                    </div>
                )
            }
            {
                userOrders && userOrders.length > 0 && (
                    <div class="space-y-8">
                        {userOrders.map((order) => (
                            <div class="bg-white rounded-2xl shadow-lg p-6 border border-gray-100 flex flex-col md:flex-row gap-6 items-center">
                                <div class="flex-shrink-0">
                                    <img
                                        src={order.Imagen || "/placeholder-product.png"}
                                        alt={order.Producto || "Producto"}
                                        class="w-24 h-24 object-contain rounded-xl border border-gray-200"
                                    />
                                </div>
                                <div class="flex-1 w-full">
                                    <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-2">
                                        <div>
                                            <div class="font-bold text-lg text-gray-900">
                                                {order.Producto || "Producto sin nombre"}
                                            </div>
                                            <div class="text-sm text-gray-500">
                                                {order.Descripcion || "Sin descripción"}
                                            </div>
                                            <div class="text-xs text-gray-400 mt-1">
                                                Referencia:{" "}
                                                <span class="font-mono">
                                                    {order.Referencia || "N/A"}
                                                </span>
                                            </div>
                                        </div>
                                        <div class="text-right md:text-left">
                                            {(() => {
                                                const status = order.Estatus || "Pendiente";
                                                let statusClass = "bg-gray-100 text-gray-700";
                                                
                                                if (status === "En Proceso") {
                                                    statusClass = "bg-yellow-100 text-yellow-700";
                                                } else if (status === "Enviado") {
                                                    statusClass = "bg-blue-100 text-blue-700";
                                                } else if (status === "En Reparto") {
                                                    statusClass = "bg-purple-100 text-purple-700";
                                                } else if (status === "Entregado") {
                                                    statusClass = "bg-green-100 text-green-700";
                                                }
                                                
                                                return (
                                                    <span class={`inline-block px-3 py-1 rounded-full text-xs font-semibold ${statusClass}`}>
                                                        {status}
                                                    </span>
                                                );
                                            })()}
                                        </div>
                                    </div>
                                    <div class="grid grid-cols-2 md:grid-cols-4 gap-2 mt-4 text-sm">
                                        <div>
                                            <span class="block text-gray-400">
                                                Cantidad
                                            </span>
                                            <span class="font-medium">
                                                {order.Cantidad || "0"}
                                            </span>
                                        </div>
                                        <div>
                                            <span class="block text-gray-400">
                                                Total
                                            </span>
                                            <span class="font-medium">
                                                $
                                                {(Number(order.Total) || 0).toLocaleString("es-MX", {
                                                    minimumFractionDigits: 2,
                                                })}
                                            </span>
                                        </div>
                                        <div>
                                            <span class="block text-gray-400">
                                                Dirección
                                            </span>
                                            <span class="font-medium">
                                                {[
                                                    order.Direccion,
                                                    order.Ciudad,
                                                    order.Pais,
                                                    order.CodigoPostal ? `CP ${order.CodigoPostal}` : null
                                                ].filter(Boolean).join(", ") || "No disponible"}
                                            </span>
                                        </div>
                                        <div>
                                            <span class="block text-gray-400">
                                                A nombre de
                                            </span>
                                            <span class="font-medium">
                                                {order.Nombre || "No especificado"}
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                )
            }
        </div>
    </SectionContainer>
</Layout>
