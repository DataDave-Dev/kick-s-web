---
import Layout from "../layouts/Layout.astro";
import SectionContainer from "../components/SectionContainer.astro";
import { supabase } from "../lib/supabase";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken && !refreshToken) {
    return redirect("/");
}

const userCookie = cookies.get("sb-user");
let user = null;
if (userCookie && userCookie.value) {
    try {
        user = JSON.parse(userCookie.value);
    } catch (error) {
        console.error("Error parsing user cookie:", error);
        return redirect("/");
    }
} else {
    return redirect("/");
}

if (!user || !user.id) {
    return redirect("/");
}

const { data: orderItems = [], error: userOrdersError } = await supabase
    .from("vw_orders")
    .select("*")
    .eq("id_Usuario", user.id);

const orderMap = new Map();

(orderItems ?? []).forEach(item => {
    const orderNumber = item.Referencia || "unknown";
    
    if (!orderMap.has(orderNumber)) {
        orderMap.set(orderNumber, {
            NumeroPedido: orderNumber,
            FechaPedido: item.Fecha,
            Estatus: item.Estatus || "Pendiente",
            Direccion: item.Direccion,
            Ciudad: item.Ciudad,
            Pais: item.Pais,
            CodigoPostal: item.CodigoPostal,
            Nombre: item.Nombre,
            Telefono: item.Telefono,
            Total: 0,
            items: []
        });
    }
    
    const order = orderMap.get(orderNumber);
    order.items.push({
        Producto: item.Producto || "Producto sin nombre",
        Descripcion: item.Descripcion || "Sin descripción",
        Imagen: item.Imagen || "/placeholder-product.png",
        Cantidad: item.Cantidad || 1,
        Referencia: item.Referencia,
        PrecioUnitario: Number(item.Total) || 0
    });
    
    order.Total += Number(item.Total) || 0;
});

const userOrders = Array.from(orderMap.values());

if (userOrders && userOrders.length > 0) {
    const statusPriority = {
        "En Proceso": 1,
        Enviado: 2,
        "En Reparto": 3,
        Entregado: 4,
        Pendiente: 0,
    };

    userOrders.sort((a, b) => {
        const statusA = (a.Estatus || "Pendiente") as keyof typeof statusPriority;
        const statusB = (b.Estatus || "Pendiente") as keyof typeof statusPriority;
        const priorityDiff =
            (statusPriority[statusA] || 0) - (statusPriority[statusB] || 0);

        if (priorityDiff !== 0) return priorityDiff;

        if (a.FechaPedido && b.FechaPedido) {
            return (
                new Date(b.FechaPedido).getTime() -
                new Date(a.FechaPedido).getTime()
            );
        }

        return 0;
    });
}
---

<Layout>
    <SectionContainer class="py-12 px-4 md:py-25">
        <div class="max-w-5xl mx-auto">
            <div class="flex items-center justify-between mb-8">
                <h1 class="text-2xl md:text-3xl font-bold text-gray-900">
                    Mis Pedidos
                </h1>
                <a
                    href="/products"
                    class="inline-flex items-center text-sm font-medium bg-red-50 text-red-700 px-4 py-2 rounded-lg hover:bg-red-100 transition-colors"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-4 w-4 mr-1"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M15 19l-7-7 7-7"></path>
                    </svg>
                    Regresar a la tienda
                </a>
            </div>

            {
                userOrdersError && (
                    <div class="bg-red-50 border border-red-100 rounded-xl p-6 mb-8 flex items-center">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-8 w-8 text-red-500 mr-3"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke="currentColor"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                            />
                        </svg>
                        <div>
                            <p class="font-medium text-red-700">
                                No pudimos cargar tus pedidos
                            </p>
                            <p class="text-red-600 text-sm mt-1">
                                Por favor intenta actualizar la página o
                                contacta a soporte.
                            </p>
                        </div>
                    </div>
                )
            }

            {
                !userOrdersError && userOrders && (
                    <div class="bg-white border border-gray-100 rounded-xl p-5 mb-8 shadow-sm">
                        <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                            <div class="text-center p-3">
                                <span class="block text-3xl font-bold text-red-600">
                                    {userOrders.length}
                                </span>
                                <span class="text-gray-500 text-sm">
                                    Total de pedidos
                                </span>
                            </div>
                            <div class="text-center p-3">
                                <span class="block text-3xl font-bold text-yellow-500">
                                    {
                                        userOrders.filter((order) =>
                                            (order.Estatus || "").includes(
                                                "Proceso",
                                            ),
                                        ).length
                                    }
                                </span>
                                <span class="text-gray-500 text-sm">
                                    En proceso
                                </span>
                            </div>
                            <div class="text-center p-3">
                                <span class="block text-3xl font-bold text-yellow-500">
                                    {
                                        userOrders.filter((order) =>
                                            ["Enviado", "En Reparto"].includes(
                                                order.Estatus || "",
                                            ),
                                        ).length
                                    }
                                </span>
                                <span class="text-gray-500 text-sm">
                                    En camino
                                </span>
                            </div>
                            <div class="text-center p-3">
                                <span class="block text-3xl font-bold text-green-500">
                                    {
                                        userOrders.filter(
                                            (order) =>
                                                (order.Estatus || "") ===
                                                "Entregado",
                                        ).length
                                    }
                                </span>
                                <span class="text-gray-500 text-sm">
                                    Entregados
                                </span>
                            </div>
                        </div>
                    </div>
                )
            }
            {
                userOrders?.length === 0 && !userOrdersError && (
                    <div class="bg-white border border-gray-100 rounded-xl p-12 text-center shadow-sm">
                        <img
                            src="/empty-orders.svg"
                            alt="No hay pedidos"
                            class="w-32 h-32 mx-auto mb-4 opacity-50"
                        />
                        <h3 class="text-xl font-medium text-gray-700 mb-2">
                            No tienes pedidos activos
                        </h3>
                        <p class="text-gray-500 mb-6">
                            ¡Explora nuestra tienda y realiza tu primer pedido!
                        </p>
                        <a
                            href="/products"
                            class="inline-flex items-center justify-center bg-red-600 text-white px-5 py-3 rounded-lg font-medium hover:bg-red-700 transition-colors"
                        >
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                class="h-5 w-5 mr-2"
                                fill="none"
                                viewBox="0 0 24 24"
                                stroke="currentColor"
                            >
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"
                                />
                            </svg>
                            Ir a la tienda
                        </a>
                    </div>
                )
            }

            {
                userOrders && userOrders.length > 0 && (
                    <div class="space-y-6">
                        {userOrders.map((order) => (
                            <div class="bg-white rounded-xl overflow-hidden border border-gray-100 shadow-sm hover:shadow-md transition-shadow">
                                <div class="border-b border-gray-100 px-6 py-4 flex justify-between items-center bg-gray-50">
                                    <div>
                                        <span class="text-xs text-gray-500">
                                            Pedido:
                                            {order.NumeroPedido}
                                        </span>
                                        <span class="mx-2 text-gray-300">
                                            |
                                        </span>
                                        <span class="text-xs text-gray-500">
                                            {order.FechaPedido
                                                ? new Date(
                                                      order.FechaPedido,
                                                  ).toLocaleDateString(
                                                      "es-MX",
                                                      {
                                                          day: "2-digit",
                                                          month: "long",
                                                          year: "numeric",
                                                      },
                                                  )
                                                : "Fecha no disponible"}
                                        </span>
                                    </div>
                                    {(() => {
                                        const status =
                                            order.Estatus || "Pendiente";
                                        let statusClass =
                                            "bg-gray-100 text-gray-700";
                                        let statusIcon = "";

                                        if (status === "En Proceso") {
                                            statusClass =
                                                "bg-yellow-100 text-yellow-700";
                                            statusIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                            </svg>`;
                                        } else if (status === "Enviado") {
                                            statusClass =
                                                "bg-red-100 text-red-700";
                                            statusIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                            </svg>`;
                                        } else if (status === "En Reparto") {
                                            statusClass =
                                                "bg-yellow-100 text-yellow-700";
                                            statusIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                                            </svg>`;
                                        } else if (status === "Entregado") {
                                            statusClass =
                                                "bg-green-100 text-green-700";
                                            statusIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                            </svg>`;
                                        }

                                        return (
                                            <span
                                                class={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}
                                            >
                                                <span set:html={statusIcon} />
                                                {status}
                                            </span>
                                        );
                                    })()}
                                </div>

                                <div class="p-6">
                                    <div class="space-y-6">
                                        {order.items.map((item: any, itemIndex: number) => (
                                            <div class="flex flex-col md:flex-row gap-6 items-center border-b border-gray-100 pb-6 mb-6 last:border-b-0 last:pb-0 last:mb-0">
                                                <div class="flex-shrink-0 relative">
                                                    <div class="w-24 h-24 md:w-28 md:h-28 overflow-hidden rounded-lg border border-gray-200 flex items-center justify-center bg-gray-50">
                                                        <img
                                                            src={item.Imagen}
                                                            alt={item.Producto}
                                                            class="w-full h-full object-contain p-2"
                                                        />
                                                    </div>
                                                    <div class="absolute -top-2 -right-2 bg-gray-700 text-white w-6 h-6 rounded-full flex items-center justify-center text-xs font-medium">
                                                        {item.Cantidad}
                                                    </div>
                                                </div>
                                                <div class="flex-1 w-full">
                                                    <div class="flex flex-col md:flex-row md:items-start md:justify-between gap-4">
                                                        <div>
                                                            <div class="font-bold text-lg text-gray-900 mb-1">
                                                                {item.Producto}
                                                            </div>
                                                            <div class="text-sm text-gray-600">
                                                                {item.Descripcion}
                                                            </div>
                                                            {item.Referencia && (
                                                                <div class="inline-flex items-center text-xs text-gray-500 mt-2 bg-gray-50 px-2 py-1 rounded">
                                                                    <span>Ref:</span>
                                                                    <span class="font-mono ml-1">
                                                                        {item.Referencia}
                                                                    </span>
                                                                </div>
                                                            )}
                                                        </div>
                                                        <div class="text-center md:text-right mt-2 md:mt-0">
                                                            <div class="text-sm text-gray-500">
                                                                Precio unitario
                                                            </div>
                                                            <div class="text-lg font-bold text-gray-900">
                                                                $
                                                                {item.PrecioUnitario.toLocaleString("es-MX", {
                                                                    minimumFractionDigits: 2,
                                                                })}
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        ))}
                                    </div>

                                    <div class="mt-6 pt-6 border-t border-gray-100">
                                        <div class="flex justify-end mb-6">
                                            <div class="bg-gray-50 px-6 py-3 rounded-lg">
                                                <div class="flex items-center justify-between space-x-8">
                                                    <span class="text-lg text-gray-600">Total del pedido:</span>
                                                    <span class="text-xl font-bold text-gray-900">
                                                        ${order.Total.toLocaleString("es-MX", {
                                                            minimumFractionDigits: 2,
                                                        })}
                                                    </span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="mt-6 grid grid-cols-1 md:grid-cols-2 gap-4">
                                            <div class="bg-gray-50 rounded-lg p-3">
                                                <h4 class="text-xs uppercase text-gray-500 font-medium mb-2">
                                                    Dirección de entrega
                                                </h4>
                                                <p class="text-sm text-gray-700">
                                                    {[
                                                        order.Direccion,
                                                        order.Ciudad,
                                                        order.Pais,
                                                        order.CodigoPostal
                                                            ? `CP ${order.CodigoPostal}`
                                                            : null,
                                                    ]
                                                        .filter(Boolean)
                                                        .join(", ") ||
                                                        "No disponible"}
                                                </p>
                                            </div>
                                            <div class="bg-gray-50 rounded-lg p-3">
                                                <h4 class="text-xs uppercase text-gray-500 font-medium mb-2">
                                                    Destinatario
                                                </h4>
                                                <p class="text-sm text-gray-700">
                                                    {order.Nombre ||
                                                        "No especificado"}
                                                    {order.Telefono && (
                                                        <span>
                                                            {" "}
                                                            · {order.Telefono}
                                                        </span>
                                                    )}
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                )
            }
        </div>
    </SectionContainer>
</Layout>
