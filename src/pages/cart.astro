---
import Layout from "../layouts/Layout.astro";
import SectionContainer from "../components/SectionContainer.astro";
---

<Layout>
    <SectionContainer class="py-20">
        <h1 class="text-3xl font-bold mb-8 text-center text-gray-800">
            Carrito de compras
        </h1>
        <div id="cart-container" class="max-w-6xl mx-auto"></div>
    </SectionContainer>

    <script type="module">
        function getCart() {
            try {
                return JSON.parse(localStorage.getItem("cart") || "[]");
            } catch {
                return [];
            }
        }

        function renderCart() {
            const cart = getCart();
            let total = 0;
            let html = "";

            if (cart.length) {
                html += `
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
                `;

                cart.forEach((item, idx) => {
                    const subtotal = Number(item.Precio) * item.Cantidad;
                    total += subtotal;
                    html += `
                    <div class="rounded-2xl shadow-xl overflow-hidden bg-white flex flex-col hover:shadow-2xl transition-shadow duration-300">
                        <div class="relative">
                            <img src="${item.Imagen}" alt="${item.Producto}" class="w-full h-40 xs:h-52 sm:h-64 object-cover transition-transform duration-300 hover:scale-105" />
                        </div>
                        <div class="p-4 flex flex-col flex-1">
                            <h2 class="text-base xs:text-lg md:text-xl font-extrabold mb-1 text-gray-900">${item.Producto}</h2>
                            <p class="text-gray-600 text-xs xs:text-sm mb-2 line-clamp-2">${item.Descripcion}</p>
                            <div class="flex flex-wrap gap-2 text-xs mb-2">
                                <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded">Marca: <span class="font-semibold">${item.Marca}</span></span>
                                <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded">Categoría: <span class="font-semibold">${item.Categoria}</span></span>
                                <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded">Estilo: <span class="font-semibold">${item.Estilo}</span></span>
                            </div>
                            <div class="flex flex-col xs:flex-row items-start xs:items-center justify-between mt-2 mb-4 gap-2">
                                <div class="flex items-center">
                                    <span class="text-xs font-medium mr-2">Cantidad:</span>
                                    <div class="flex items-center border rounded overflow-hidden">
                                        <button 
                                            class="bg-gray-100 px-2 py-1 hover:bg-gray-200 transition-colors"
                                            onclick="updateCartItemQuantity(${idx}, -1)"
                                        >-</button>
                                        <span class="px-3 py-1 font-medium">${item.Cantidad}</span>
                                        <button 
                                            class="bg-gray-100 px-2 py-1 hover:bg-gray-200 transition-colors"
                                            onclick="updateCartItemQuantity(${idx}, 1)"
                                        >+</button>
                                    </div>
                                </div>
                                <span class="text-base xs:text-lg font-bold text-red-500">$${(Number(item.Precio) * item.Cantidad).toFixed(2)}</span>
                            </div>
                            <button
                                onclick="removeFromCartByIndex(${idx})"
                                class="mt-auto bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-full shadow transition-all w-full text-sm xs:text-base"
                            >
                                Quitar del carrito
                            </button>
                        </div>
                    </div>
                    `;
                });

                html += `</div>`;

                // Agregar el resumen del carrito
                html += `
                <div class="bg-white rounded-2xl shadow-xl p-4 xs:p-6 mt-8">
                    <div class="flex flex-col md:flex-row justify-between items-center">
                        <div class="text-base xs:text-xl font-bold text-gray-800 mb-4 md:mb-0">
                            Total de productos: <span class="text-red-500">${cart.reduce((acc, item) => acc + item.Cantidad, 0)}</span>
                        </div>
                        <div class="flex flex-col text-end text-lg xs:text-2xl font-bold text-gray-800">
                            <div>
                                SubTotal : <span class="text-red-500">$${(total / 1.16).toFixed(2)}</span>
                            </div>
                            <div>
                                Impuestos (IVA) : <span class="text-red-500">$${(total - (total / 1.16)).toFixed(2)}</span>
                            </div>
                            <div>
                                Total a pagar: <span class="text-red-500">$${total.toFixed(2)}</span>
                            </div>
                        </div>
                    </div>
                    <div class="mt-6 flex justify-end">
                        <button 
                            class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 xs:py-3 px-6 xs:px-8 rounded-full shadow transition-all text-sm xs:text-base"
                            onclick="proceedToCheckout()"
                        >
                            Proceder al pago
                        </button>
                    </div>
                </div>
                `;
            } else {
                html = `
                <div class="text-center text-gray-500 py-16">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto mb-4 text-gray-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                    </svg>
                    <h2 class="text-xl xs:text-2xl font-bold mb-2">Tu carrito está vacío</h2>
                    <p class="mb-8 text-sm xs:text-base">Agrega algunos productos para comenzar a comprar</p>
                    <a href="/products" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 xs:py-3 px-6 xs:px-8 rounded-full shadow transition-all text-sm xs:text-base">
                        Ver productos
                    </a>
                </div>
                `;
            }

            document.getElementById("cart-container").innerHTML = html;
        }

        function updateCartItemQuantity(idx, change) {
            let cart = getCart();
            if (cart[idx]) {
                const newQuantity = cart[idx].Cantidad + change;
                if (newQuantity > 0) {
                    cart[idx].Cantidad = newQuantity;
                    localStorage.setItem("cart", JSON.stringify(cart));
                    renderCart();
                    if (window.updateCartCount) window.updateCartCount();
                }
            }
        }

        function removeFromCartByIndex(idx) {
            let cart = getCart();
            cart.splice(idx, 1);
            localStorage.setItem("cart", JSON.stringify(cart));
            renderCart();
            if (window.updateCartCount) window.updateCartCount();
        }

        function proceedToCheckout() {
            alert(
                "¡Gracias por tu compra! Esta funcionalidad estará disponible pronto.",
            );
        }

        window.updateCartItemQuantity = updateCartItemQuantity;
        window.removeFromCartByIndex = removeFromCartByIndex;
        window.proceedToCheckout = proceedToCheckout;

        document.addEventListener("astro:page-load", renderCart);
        window.addEventListener("storage", function (e) {
            if (e.key === "cart") renderCart();
        });
    </script>

    <style>
        .line-clamp-2 {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        @media (max-width: 640px) {
            .xs\:h-52 {
                height: 11rem !important;
            }
            .sm\:h-64 {
                height: 14rem !important;
            }
            .h-40 {
                height: 9rem !important;
            }
            .xs\:text-lg {
                font-size: 1.125rem !important;
            }
            .xs\:text-2xl {
                font-size: 1.6rem !important;
            }
            .xs\:py-3 {
                padding-top: 0.75rem !important;
                padding-bottom: 0.75rem !important;
            }
            .xs\:px-8 {
                padding-left: 2rem !important;
                padding-right: 2rem !important;
            }
            .xs\:p-6 {
                padding: 1.5rem !important;
            }
            .xs\:font-bold {
                font-weight: 700 !important;
            }
            .xs\:mb-2 {
                margin-bottom: 0.5rem !important;
            }
            .xs\:mb-4 {
                margin-bottom: 1rem !important;
            }
        }
    </style>
</Layout>
