---
import { supabase } from "../lib/supabase";

const currentUrl = Astro.url.pathname;
const accessToken = Astro.cookies.get("sb-access-token");
const refreshToken = Astro.cookies.get("sb-refresh-token");

let isLoggedIn = false;

if (accessToken && refreshToken) {
    try {
        const session = await supabase.auth.setSession({
            refresh_token: refreshToken.value,
            access_token: accessToken.value,
        });
        if (!session.error && session.data.user) {
            isLoggedIn = true;
        } else {
            Astro.cookies.delete("sb-access-token", { path: "/" });
            Astro.cookies.delete("sb-refresh-token", { path: "/" });
        }
    } catch (error) {
        Astro.cookies.delete("sb-access-token", { path: "/" });
        Astro.cookies.delete("sb-refresh-token", { path: "/" });
    }
}
---

<header
    class="fixed z-20 bg-white w-full flex flex-row justify-between items-center px-4 md:px-12 py-4 shadow-md"
>
    <h1 class="text-lg md:text-xl font-bold">
        <a href="/" aria-label="Inicio">
            Kick's <span class="text-red-500">Store</span>
        </a>
    </h1>

    <button
        id="mobile-menu-btn"
        class="md:hidden flex items-center px-2 py-1 border rounded text-gray-700 border-gray-300 focus:outline-none"
        aria-label="Menú"
    >
        <svg
            class="h-6 w-6"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
        >
            <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
    </button>

    <nav id="main-nav" class="md:block">
        <ul
            id="mobile-menu"
            class="hidden md:flex flex-col md:flex-row md:space-x-4 items-center bg-white md:bg-transparent absolute md:static left-0 right-0 top-16 w-full md:w-auto shadow-md md:shadow-none border-t md:border-none z-50"
        >
            <li>
                <a
                    href="/"
                    class={`block px-4 py-3 md:p-0 hover:text-red-500 font-semibold ${currentUrl === "/" ? "text-red-500" : ""} transition-all duration-300 text-sm md:text-base`}
                    >Inicio</a
                >
            </li>
            <li>
                <a
                    href="/products"
                    class={`block px-4 py-3 md:p-0 hover:text-red-500 font-semibold ${currentUrl === "/products" ? "text-red-500" : ""} transition-all duration-300 text-sm md:text-base`}
                    >Productos</a
                >
            </li>
            <li>
                {
                    isLoggedIn ? (
                        <form
                            action="/api/auth/signout"
                            method="get"
                            class="block px-4 py-3 md:p-0"
                        >
                            <button
                                type="submit"
                                class="hover:text-red-500 font-semibold transition-all duration-300 text-sm md:text-base bg-transparent border-none cursor-pointer w-full text-left"
                            >
                                Cerrar Sesión
                            </button>
                        </form>
                    ) : (
                        <a
                            href="/register"
                            class={`block px-4 py-3 md:p-0 hover:text-red-500 font-semibold ${currentUrl === "/register" ? "text-red-500" : ""} transition-all duration-300 text-sm md:text-base`}
                        >
                            Registrarse
                        </a>
                    )
                }
            </li>
            <li class="px-4 py-3 md:p-0">
                <a
                    href="/cart"
                    class="relative flex items-center"
                    aria-label="Carrito de compras"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-6 w-6"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13l-1.35 2.7A1 1 0 007.5 17h9a1 1 0 00.85-1.53L17 13M7 13V6a1 1 0 011-1h5a1 1 0 011 1v7"
                        ></path>
                    </svg>
                    <span
                        id="cart-count"
                        class="absolute -top-2 -right-2 bg-red-500 text-white rounded-full text-xs w-5 h-5 flex items-center justify-center"
                        >0</span
                    >
                </a>
            </li>
        </ul>
    </nav>
</header>

<style>
    /* Estilos para el menú móvil */
    @media (max-width: 768px) {
        #mobile-menu {
            transition: all 0.3s ease;
            max-height: 0;
            overflow: hidden;
        }

        #mobile-menu.expanded {
            display: flex !important;
            max-height: 300px;
        }
    }
</style>

<script is:inline>
    document.addEventListener("astro:page-load", () => {
        const $mobileMenuBtn = document.getElementById("mobile-menu-btn");
        const $mobileMenu = document.getElementById("mobile-menu");

        if ($mobileMenuBtn && $mobileMenu) {
            $mobileMenuBtn.addEventListener("click", () => {
                $mobileMenu.classList.toggle("hidden");
                $mobileMenu.classList.toggle("expanded");
            });
        }

        function getCart() {
            try {
                return JSON.parse(localStorage.getItem("cart") || "[]");
            } catch {
                return [];
            }
        }

        function updateCartCount() {
            const cart = getCart();
            const count = cart.reduce(
                (sum, item) => sum + (Number(item.Cantidad) || 0),
                0,
            );
            const badge = document.getElementById("cart-count");
            if (badge) badge.textContent = count;
        }

        window.updateCartCount = updateCartCount;
        updateCartCount();

        window.addEventListener("storage", function (e) {
            if (e.key === "cart") updateCartCount();
        });

        const $menuLinks = $mobileMenu?.querySelectorAll("a");
        if ($menuLinks) {
            $menuLinks.forEach((link) => {
                link.addEventListener("click", () => {
                    if (window.innerWidth < 768) {
                        $mobileMenu.classList.add("hidden");
                        $mobileMenu.classList.remove("expanded");
                    }
                });
            });
        }
    });
</script>