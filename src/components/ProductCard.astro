---
const {
    Producto_id,
    Producto,
    Descripcion,
    Precio,
    Cantidad,
    Imagen,
    Categoria,
    Marca,
    Estilo,
} = Astro.props;
---

<div class="product-card">
    <div class="product-image-container">
        <img src={Imagen} alt={Producto} class="product-image" />
        {
            Cantidad === 0 && (
                <span class="stock-badge">
                    Sin stock
                </span>
            )
        }
    </div>
    <div class="product-content">
        <h2 class="product-title">{Producto}</h2>
        <p class="product-description">{Descripcion}</p>
        <div class="product-tags">
            <span class="tag">Marca: <strong>{Marca}</strong></span>
            <span class="tag">Categoría: <strong>{Categoria}</strong></span>
            <span class="tag">Estilo: <strong>{Estilo}</strong></span>
        </div>
        <div class="product-footer">
            <div class="product-info">
                <span class="product-availability">Disponibles: <strong>{Cantidad}</strong></span>
                <span class="product-price">
                    {
                        Number(Precio).toLocaleString("es-MX", {
                            style: "currency",
                            currency: "MXN",
                        })
                    }
                </span>
            </div>
            <button
                type="button"
                class="add-to-cart-btn"
                disabled={Cantidad === 0}
                onclick={`(function(){
                    let cart = JSON.parse(localStorage.getItem('cart') || '[]');
                    cart.push({
                        Producto_id: ${JSON.stringify(Producto_id)},
                        Producto: ${JSON.stringify(Producto)},
                        Descripcion: ${JSON.stringify(Descripcion)},
                        Precio: ${JSON.stringify(Precio)},
                        Imagen: ${JSON.stringify(Imagen)},
                        Marca: ${JSON.stringify(Marca)},
                        Categoria: ${JSON.stringify(Categoria)},
                        Estilo: ${JSON.stringify(Estilo)},
                        Cantidad: 1
                    });
                    localStorage.setItem('cart', JSON.stringify(cart));
                    if(window.updateCartCount) window.updateCartCount();
                    this.textContent = '¡Agregado!';
                    setTimeout(()=>{this.textContent='Agregar al carrito'}, 1000);
                }).call(this)`}
            >
                Agregar al carrito
            </button>
        </div>
    </div>
</div>

<style>
    .product-card {
        display: flex;
        flex-direction: column;
        width: 100%;
        height: 450px;
        border-radius: 1rem;
        overflow: hidden;
        background-color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        border: 1px solid #f3f4f6;
    }
    
    .product-card:hover {
        box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
        transform: translateY(-5px);
    }
    
    .product-image-container {
        position: relative;
        height: 200px;
        overflow: hidden;
    }
    
    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }
    
    .product-card:hover .product-image {
        transform: scale(1.05);
    }
    
    .stock-badge {
        position: absolute;
        top: 12px;
        left: 12px;
        background-color: rgba(17, 24, 39, 0.9);
        color: white;
        font-size: 0.7rem;
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        font-weight: 600;
    }
    
    .product-content {
        display: flex;
        flex-direction: column;
        padding: 1rem;
        flex: 1;
    }
    
    .product-title {
        font-size: 1.1rem;
        font-weight: 700;
        color: #111827;
        margin-bottom: 0.5rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    
    .product-description {
        color: #6b7280;
        font-size: 0.875rem;
        margin-bottom: 0.75rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        height: 2.8rem;
    }

    .product-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.25rem;
        margin-bottom: 0.75rem;
    }
    
    .tag {
        background-color: #f3f4f6;
        color: #4b5563;
        font-size: 0.7rem;
        padding: 0.25rem 0.5rem;
        border-radius: 9999px;
        white-space: nowrap;
    }
    
    .product-footer {
        margin-top: auto;
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }
    
    .product-info {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .product-availability {
        font-size: 0.75rem;
        color: #9ca3af;
    }
    
    .product-price {
        font-size: 1.25rem;
        font-weight: 800;
        color: #ef4444;
    }
    
    .add-to-cart-btn {
        width: 100%;
        background-color: #ef4444;
        color: white;
        font-weight: 600;
        padding: 0.625rem;
        border-radius: 0.75rem;
        transition: background-color 0.3s ease;
        text-align: center;
        border: none;
        cursor: pointer;
    }
    
    .add-to-cart-btn:hover:not(:disabled) {
        background-color: #dc2626;
    }
    
    .add-to-cart-btn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
    
    @media (max-width: 640px) {
        .product-card {
            height: auto;
            min-height: 420px;
        }
        
        .product-image-container {
            height: 180px;
        }
    }
</style>